// Copyright 2012 Moonaire. All rights reserved
// See licensing information for more usage rights

(Entity.define "Button"
{
    properties:
    {
        isActive: true
        isPressed: false
        
        onCreate:
            (function ()
                (var world this.world)
                
                (var red (new Image world.groundLayer "ButtonRed"))
                (var base (new Image world.groundLayer "ButtonBase"))
                
                (set x ( - 885 (/ 1280 2)))
                (set y ( - 500 (/ 720 2)))
                
                (set this.y0 y)
                (set this.y1 (+ y 50))
                
                (set red.x x)
                (set red.y y)
                (set base.x x)
                (set base.y y)
                
                (set this.red red)
                (set this.base base)
                
                (procedure onMouseDown (event)
                    (set this.isPressed true)
                    
                    (if (== world.state world.STATE_MENU)
                        (begin
                            (set world.state world.STATE_GAME)
                            (set world.message.visible true)
                        )
                    )
                )
                
                (procedure onMouseUp (event)
                    (set this.isPressed false)
                    
                    (if (== world.state world.STATE_OVER)
                        (begin
                            (set world.state world.STATE_MENU)
                            (var contraption world.contraption)
                            (set contraption.rope.y contraption.startHeight)
                            (set contraption.height contraption.startHeight)
                            (set world.time 0)
                            (set world.points 0)
                            (set world.bonusTimer world.bonusInit)
                            (set world.title.y world.titleTop)
                            (set world.title.alpha 1)
                            (set world.message.visible false)
                        )
                    )
                )
                
                (set this.onMouseDown onMouseDown)
                (set this.onMouseUp onMouseUp)
                
                (base.addEventListener MouseEvent.MOUSE_DOWN onMouseDown)
                (base.addEventListener MouseEvent.MOUSE_UP onMouseUp)
                (base.addEventListener MouseEvent.ROLL_OUT onMouseUp)
            )
            
        onDestroy:
            (function ()
                (var red this.red)
                (var base this.base)
                
                (base.removeEventListener MouseEvent.MOUSE_DOWN this.onMouseDown)
                (base.removeEventListener MouseEvent.MOUSE_UP this.onMouseUp)
                (base.removeEventListener MouseEvent.ROLL_OUT this.onMouseUp)
                
                (red.destroy)
                (base.destroy)
                
                (set this.red null)
                (set this.base null)
            )
            
        onUpdate:
            (function (dt fdt)
                (var base this.base)
                (var red this.red)
                
                (if this.isPressed
                    (set red.y this.y1)
                    (set red.y this.y0)
                )
            )
    }
})


(Entity.define "Contraption"
{
    properties:
    {
        isActive: true
        height: 160
        range: 450
        
        fallSpeed: 360
        spinSpeed: 0
        spinAccel: 50
        maxSpinSpeed: 600
        
        gibTimer: 0.0
        gibInit: 0.1
        
        onCreate:
            (function ()
                (var world this.world)
                (var saw1 (new Image world.groundLayer "Saw"))
                (var rope (new Image world.groundLayer "Rope"))
                (var cat (new Image world.groundLayer "Cat"))
                (var saw2 (new Image world.groundLayer "Saw"))
                
                (rope.addChild cat)
                
                (var x (- 410 (/ 1280 2)))
                (var y (- (- 160 rope.height) (/ 720 2)))
                
                (set this.height y)
                (set this.startHeight y)
                (set this.maxHeight (+ y this.range))
                (set this.resetHeight (+ this.maxHeight rope.height 100))
                
                (set rope.x x)
                (set rope.y y)
                (set cat.y (- rope.height 70))
                (set saw1.x (+ x 40))
                (set saw2.x (- x 40))
                (set saw1.y (+ rope.height y 550))
                (set saw2.y (+ rope.height y 570))
                (set saw2.scaleX -1)
                
                (set this.rope rope)
                (set this.cat cat)
                (set this.saw1 saw1)
                (set this.saw2 saw2)
            )
            
        onDestroy:
            (function ()
                (var rope this.rope)
                (var cat this.cat)
                
                (rope.destroy)
                (cat.destroy)
                
                (set this.rope null)
                (set this.cat null)
            )
            
        onUpdate:
            (function (dt fdt)
                (var world this.world)
                (var button this.world.button)
                (var rope this.rope)
                (var cat this.cat)
                (var saw1 this.saw1)
                (var saw2 this.saw2)
                
                (var height this.height)
                
                (if (== world.state world.STATE_GAME)
                    (begin
                        // if havent game-over, update time
                        (if (<= height this.maxHeight) (+= world.time dt))
                        
                        // if the button is not pressed or cat is below max height, then drop
                        (if (|| (! button.isPressed) (> height this.maxHeight))
                            (begin
                                (+= height (* this.fallSpeed dt))
                                (set this.height height)
                                
                                // if dead, every x time, create gibs
                                (if (> height this.maxHeight)
                                    (if (> this.gibTimer 0)
                                        (-= this.gibTimer dt)
                                        (begin
                                            (world.createEntity "Gib")
                                            (world.createEntity "Splatter")
                                            (set this.gibTimer this.gibInit)
                                        )
                                    )
                                )
                                
                                // descent, and if game over, reset
                                (if (> (set this.rope.y height) this.resetHeight)
                                    (set world.state world.STATE_OVER)
                                )
                            )
                        )
                        
                        (var spinSpeed (+ this.spinSpeed (* this.spinAccel dt)))
                        (if (> spinSpeed this.maxSpinSpeed) (set spinSpeed this.maxSpinSpeed))
                        (+= saw1.rotation (* -spinSpeed dt))
                        (+= saw2.rotation (* spinSpeed dt))
                        (set this.spinSpeed spinSpeed)
                    )
                    (begin
                        (var spinSpeed (- this.spinSpeed (* this.spinAccel dt)))
                        (if (< spinSpeed 0) (set spinSpeed 0))
                        (+= saw1.rotation (* -spinSpeed dt))
                        (+= saw2.rotation (* spinSpeed dt))
                        (set this.spinSpeed spinSpeed)
                    )
                )
                
                // in all states, sway the rope and shake the cat
                (set rope.rotation (Math.oscillate 2 0.5 this.stateTime 0 0))
                (set cat.rotation (Math.oscillate 4 5 this.stateTime 0 0))
            )
    }
})



(Entity.define "Bonus"
{
    properties:
    {
        isActive: true
        speed: 100
        max: 680
        
        onCreate:
            (function ()
                (var world this.world)
                
                (var r (Math.floor (* (Math.random) 3)))
                (var img)
                (var points)
                
                //(var sound (new Audio "ButtonClick"))
                //(sound.play)
                
                (cond
                    ((== r 0)
                        (begin
                            (set img (new Image world.groundLayer "BonusSmall"))
                            (set points 1)
                            (set this.speed 100)
                        )
                    )
                    ((== r 1)
                        (begin
                            (set img (new Image world.groundLayer "BonusBig"))
                            (set points 10)
                            (set this.speed 500)
                        )
                    )
                    ((== r 2)
                        (begin
                            (set img (new Image world.groundLayer "BonusCat"))
                            (set points -10)
                            (set this.speed 300)
                        )
                    )
                )
                
                (set img.x -680)
                (set img.y -200)
                
                (set this.img img)
                
                (procedure onClick (event)
                    (+= world.points points)
                    (this.destroy)
                    
                    // if it's the cat bonus
                    (if (== r 2)
                        (begin
                            (var contraption world.contraption)
                            (-= contraption.height 100)
                        )
                    )
                )
                
                (set this.onClick onClick)
                (img.addEventListener MouseEvent.MOUSE_DOWN onClick)
            )
            
        onDestroy:
            (function ()
                (var img this.img)
                (img.removeEventListener MouseEvent.MOUSE_DOWN this.onClick)
                (img.destroy)
                (set this.img null)
            )
            
        onUpdate:
            (function (dt fdt)
                (var world this.world)
                
                (if (== world.state world.STATE_GAME)
                    (begin
                        (var img this.img)
                        (+= img.x (* this.speed dt))
                        (if (> img.x this.max) (this.destroy))
                    )
                    (this.destroy)
                )
            )
    }
})


(Entity.define "Gib"
{
    properties:
    {
        isActive: true
        speed: 3
        
        onCreate:
            (function ()
                (var world this.world)
                
                (var r (Math.floor (* (Math.random) 6)))
                (var img)
                
                (cond
                    ((== r 0)
                        (begin
                            (set img (new Image world.groundLayer "Guts03"))
                        )
                    )
                    ((< r 3)
                        (begin
                            (set img (new Image world.groundLayer "Guts02"))
                        )
                    )
                    ((>= r 3)
                        (begin
                            (set img (new Image world.groundLayer "Guts01"))
                        )
                    )
                )
                
                (set img.x (Math.randomFuzzy -230 100))
                (set img.y (Math.randomFuzzy 300 100))
                
                (set img.xvel (Math.randomFuzzy 0 150))
                (set img.yvel (Math.randomFuzzy -200 150))
                
                (set img.rot (Math.randomFuzzy 0 (* 360 6)))
                
                (var scale (Math.randomRange 0.5 1.2))
                (set img.scaleX scale)
                (set img.scaleY scale)
                
                (set this.img img)
            )
            
        onDestroy:
            (function ()
                (var img this.img)
                (img.destroy)
                (set this.img null)
            )
            
        onUpdate:
            (function (dt fdt)
                (var world this.world)
                (var img this.img)
                (var speed this.speed)
                
                (+= img.yvel (* 98 speed dt))
                (+= img.x (* img.xvel speed dt))
                (+= img.y (* img.yvel speed dt))
                (+= img.rotation (* img.rot dt))
                
                (if (> img.y 400) (this.destroy))
            )
    }
})


(Entity.define "Splatter"
{
    properties:
    {
        isActive: true
        fadeSpeed: 3
        scaleSpeed: 3
        
        onCreate:
            (function ()
                (var world this.world)
                
                (var img (new Image world.guiLayer "Splatter01"))
                
                (set img.x (Math.randomFuzzy -230 150))
                (set img.y (Math.randomFuzzy 300 150))
                
                (var scale (Math.randomRange 0.2 1))
                (set img.scaleX scale)
                (set img.scaleY scale)
                
                (set img.rotation (Math.randomRange 0 360))
                
                (set this.img img)
            )
            
        onDestroy:
            (function ()
                (var img this.img)
                (img.destroy)
                (set this.img null)
            )
            
        onUpdate:
            (function (dt fdt)
                (var world this.world)
                (var img this.img)
                
                (var alpha img.alpha)
                
                (if (> alpha 0)
                    (begin
                        (-= alpha (* this.fadeSpeed dt))
                        (var scale (+ img.scaleX (* this.scaleSpeed dt)))
                        (set img.scaleX scale)
                        (set img.scaleY scale)
                
                        (set img.alpha (if (<= alpha 0) 0 alpha))
                    )
                    (this.destroy)
                )
            )
    }
})
